{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 HelveticaNeue-BoldItalic;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red2\green2\blue2;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c785\c785\c784\c5882;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww13660\viewh15680\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Case study\
\
\
\
\
\
\
\
7/6 - early morning\
\
Positioning summary marker with CSS.  How to get it to the right side of the text, sort of imitating an inline-block display?\
\
7/6 - next day\
\
CSS animations.\
\
\
\
Transition - \
\
\
Making a triangle with CSS as SVGs carried too much baggage to be able to animate and rotate later.\
\
Went back to the SVG \
\
\
\
\
\
7/12\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0
\fs36 \cf0 {\listtext	\uc0\u8226 	}Download unsplash items.  Store all photo locations in a JSON file and pull them with product cards.\
{\listtext	\uc0\u8226 	}Reviewing how to properly size SVGs - inside a parent wrapper or not?\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}In funko-vue, the SVG was kept in line by putting a flex directive on the parent element.  (flex :1, flex: 3, and flex: 1)s\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\cf0 \
Added a local storage object to store the open or closed state of details.\
\
Cleaned up CSS \'97 the spacing for grid-gaps and padding should match almost everywhere\
\
\
\
7/13\
\
put splash photos consistently in the right places\'85\
\
\
\
A great example of optional chaining.  This is necessary to reuse the product-card, as on the favorites page, the event listener won\'92t find an event target with a class of category\'94.  These are connected to the behavior of async functions!\
\
const categoryId = event.target.closest('.category')?.dataset.id;\
 \'97Using the renderFavorites() function to rerender after changes are made to the favorites page.\
\
7/14\
\
The heart that changes sizes \'97 what causes this??\
\
The details element doesn\'92t deal with boxsizing properly.  More specifically, it doesn\'92t inherit the box-sizing attribute from its parent.  This causes some wonky size changes etc.\
\
*show a low-res video of the sizes changing*\
\
What causes this?  The presence of a details element on the main page changed how the box-sizing was being inherited on all of the elements below \'93details\'94.  \'93Details\'94 for some reason, did not inherit the box-sizing of its parent as specificed in the reset.\
\
\
\
7/18\
max-width:  1fr; for fluid, responsive type sizing!  This is a breakthrough.  It ensures that the inner and outer object keep on the same track by limiting the inner object\'92s max size to half the width of the larger object.\
Exporting images -  try around 2000px for clarity.\
\
\
\
***************\
\
\
\
\
Front End Engineer Challenge\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
Using native HTML, CSS and JavaScript to craft a simple frontend prototype for an e-commerce site.\
\
At the outset of this project I wanted to be clear what needed to be done \'97 and be able to read between the lines and discern the hidden requirements.\
\
What are the written goals?\
\
-Create a dropdown menu that displays products.\
-Each product has a favorites toggle that adds and removes items from local storage, making choices persistent.\
-Semantic (custom HTML tags), accessible(easy for screen readers to parse), responsive(displays well across all screen sizes), and discoverable(includes metadata).\
\
What are the unwritten goals?\
-Proper scoping of JavaScript.\
-Using a visual design language that\'92s clear and to the point.\
\

\f2\i\b\fs48 Designing the layout
\f1\i0\b0\fs36 \
\
The layout needed to follow a tried-and-tested format.  While inventiveness is rewarding as a creative endeavor and learning exercise, it\'92s not relevant for this project.  The components of the site need to be immediately familiar so the logic of what to do next is perfectly clear.\
\
*insert funny meme here about clarity*\
\
What layout works best?  Started with unordered lists and list items.  Having a conversation with a fellow developer revealed the native HTML elements that create a built-in hierarchy:  <details> and <summary>.\
\
The category list is in block format, and the dropdown of product cards is the \'93slot\'94 value inside the <details> tag.  The <summary> tag holds the category title.\
\
Each product list is displayed with all product cards in a grid.  Each card has a photo of the product, its name, a normal price (crossed out), a sale price(in bold), and a favorites icon, which can be toggled on and off and has a class that is tied to that event.\
\
\

\f2\i\b\fs48 Architecting the code
\f1\i0\b0\fs36 \
\
\
The app runs off the following files:\
an index.html file.  The CSS for the project is all contained in a single <style> tag in this file.\
a functions.js file\
a main.css stylesheet\
\
As many functions as possible are used to achieve various tasks within the app.\
The main points of interest are:\
-Using JavaScript to render out the appropriate HTML\
-Having a function to add all event listeners\
-Using responsive layout techniques with CSS\
	-Grid was used for nearly all flexible items.  Flexbox was used for one item in the header that needed a wrap property.\
\
-Having the visual traits of the dropdown arrow change as the <detail>\'92s tag changes from open to closed (done with CSS)\
\
-Using functions to change the HTML output (using the .outerHTML method) depending on if a method has a certain ID attached\
\
Responsiveness\
\
`<code>`display: grid</code> is used for most of the major components of the site.\
-the header inner-column\
-the <summary> section\
-the <product-list> unordered list\
-the <product-cards> themselves.  The grid for these is set to <code>auto 1fr 1fr</code>, a cell each for the product photo, the list price, and the sale price.  The <code>auto</code> cell allows for the photo to grow and shrink as need without creating any extra padding / unused space.  The <code>1 fr</code> setting\
\
\
\
\
Accessibility\
\
Using Javascript to grab the name of an item so the screen-read can read what\'92s under the alt attribute.\
\
<img src="photos/$\{item.photo\}" alt="$\{item.name\}">\
\
\
\
\
Implementing\
\
\
\
\
Challenges\
\
The transformData() function:  using reduce\
\
\
-Number formatting\
	The numeric data in the JSON file pulled from the API is in string format \'97 and when it\'92s stored in local storage, will remain in string format.  The numbers needed to be formatted in currency and fixed to two decimal places \'97 but the <code>.toFixed()</code> method can\'92t be used on strings.\
\
\
The Lighthouse tests\
\
-Images were too big - resized them to 600px at 75% and then 300px at 50%\
-Renamed buttons\
-Put explicit width and height on photos, so the browser reserves at least that amount of space for each photo\
\
\
}