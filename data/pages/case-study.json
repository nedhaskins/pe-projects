[
	{
		"slug": "theme-challenge",
		"siteXtensionType": "php",
		"title": "outer banks vacation rentals",
		"subtitle": "Theming, CSS frameworks, and replication.",
		"htmlContent": [
			{
				"tag": "p",
				"content": "Each student in the Design for the Web course recently completed a week-long \"responsive theme challenge\"."
			},
			{
				"tag": "p",
				"content": "This project tied together many elements we'd been studying in the course up to this point:"
			},
			{
				"tag": "ul",
				"content": [
					{
						"tag": "li",
						"content": "HTML structure; the \"hierarchy\" of elements;"
					},
					{
						"tag": "li",
						"content": "CSS - work with responsive elements, section spacing, color choices, typography, and making a \"unified whole\" or \"unified statement\""
					},
					{
						"tag": "li",
						"content": "PHP - creating associative arrays and pulling the data to be used for dynamic content (section) creation"
					},
					{
						"tag": "li",
						"content": "Time was a factor; we were given six days to complete the project."
					}
				]
			},
			{
				"tag": "h3",
				"content": "Day 1"
			},
			{
				"tag": "p",
				"content": "As an individual exercise both in in site layout and getting familiar with the tools and languages to be used in the project, each student wrote out all of the code needed to recreate a sample responsive layout as accurately as possible."
			},
			{
				"tag": "h3",
				"content": "Day 2"
			},
			{
				"tag": "p",
				"content": "We reviewed the code from this initial exercise with the instructor to check for understanding and accuracy."
			},
			{
				"tag": "h3",
				"content": "Day 3"
			},
			{
				"tag": "p",
				"content": "We chose an industry or \"niche\" to research. The idea was to gather in one place as many visual tricks and layout elements that were common to all of the sites researched. What colors / color schemes were favored the most? Font pairings? How was spacing used throughout the site? Was there enough between the elements, or were things packed too closely together, like sardines?"
			},
			{
				"tag": "p",
				"content": "It also became apparent during this step that one had to ask the question, “What’s the best way to do research for a project like this?” It had to fall in line with the time constraints we had — at this point we could reasonably expect to have three days maximum to write out the code for the site after the research."
			},
			{
				"tag": "p",
				"content": "My initial thought process for the research went something like this: Treat it like a spree. I chose half a dozen websites and grabbed everything I could off of them as quickly as I could."
			},
			{
				"tag": "p",
				"content": "I began by looking up rental agency websites in a familiar location - the Outer Banks of North Carolina, a popular resort area in the Mid-Atlantic region."
			},
			{
				"tag": "p",
				"content": "I took note of the colors used -- shades of green and blue took center stage on nearly every page, followed by tan and white. It fit the sites' goal of evoking a \"beach\" vibe."
			},
			{
				"tag": "figure",
				"src": "data/case-studies/outer-banks/sun-realty.jpeg",
				"figcaption": "One of the sites researched - Sun Realty, Outer Banks, NC"
			},
			{
				"tag": "p",
				"content": "Beach landscape photographs were used as a backdrop for header text on every site I visited. Some websites immediately showed a date/time/number of guests component right off the bat (\"Choose your destination\"); users were able to cut down on their browsing time by being given back only the available results within their specified time period."
			},
			{
				"tag": "p",
				"content": "For all of the sites, further down, a module showed \"categories\" of rentals to choose from (\"Oceanside Rentals\", \"Last Minute Deals\", etc)."
			},
			{
				"tag": "figure",
				"class": "figure-0",
				"src": "data/case-studies/outer-banks/rental-searches.webp",
				"figcaption": false
			},
			{
				"tag": "p",
				"content": "After the initial passes on the chosen websites I read a little on font pairings and dug into Google Fonts to find some typefaces that might fit my chosen theme."
			},
			{
				"tag": "p",
				"content": "All of this research prepared us for the following day — the style tile."
			},
			{
				"tag": "h3",
				"content": "Day 4"
			},
			{
				"tag": "p",
				"content": "A style tile is a visual device used in project management and implementation to convey ideas about theming, layout and typography to a stakeholder."
			},
			{
				"tag": "p",
				"content": "Our goal was to take all of the ideas found in the research and mock up a style tile as a prelude to the actual implementation of the code."
			},
			{
				"tag": "p",
				"content": "Getting all of the elements into a presentable \"layout\" format was less important at this stage to me than getting a cohesive feeling about the elements going. The colors, the fonts, the shapes — all of it needed to convey what all of us can probably collectively agree can be called “the beach vibe”. Relaxed. Free. Calming. A piña colada."
			},
			{
				"tag": "p",
				"content": "Two color palettes to be used with site elements, header fonts, and fonts used for paragraph text were included."
			},
			{
				"tag": "figure",
				"class": "figure-1",
				"src": "data/case-studies/outer-banks/style-tile.webp",
				"figcaption": ""
			},
			{
				"tag": "h3",
				"content": "Days 5 and 6"
			},
			{
				"tag": "p",
				"content": "It was time to get the code rolling — to use our tools, research and visual devices to make the final layout as close as possible to the sites we had researched."
			},
			{
				"tag": "h3",
				"content": "The first pass"
			},
			{
				"tag": "figure",
				"src": "data/case-studies/outer-banks/figure-1.webp",
				"figcaption": "Figure 1.1"
			},
			{
				"tag": "figure",
				"class": "figure-2",
				"src": "data/case-studies/outer-banks/figure-2.webp",
				"figcaption": "Figure 1.2"
			},
			{
				"tag": "figure",
				"class": "figure-3",
				"src": "data/case-studies/outer-banks/figure-3.webp",
				"figcaption": "Figure 1.3"
			},
			{
				"tag": "p",
				"content": "The first phase. I’d just placed the photos and new fonts into the layout and incorporated some color choices. Immediate issues included getting the first page-wide image to not repeat — and for it to be centered. The spacing in the first section hadn’t been worked out yet, but user feedback told me there wasn’t enough space between the image and the first bit of text content. (fig. 1)."
			},
			{
				"tag": "p",
				"content": "Our site template included an <code>&lt;article&gt;</code> section. The PHP element of the project came into play here — data from an associative array was used to populate each of the <code>&lt;article-card&gt;</code> elements. I didn’t change too much about the initial card styling on the first pass, but added images and the chosen heading and “normal text” fonts (fig. 2)."
			},
			{
				"tag": "p",
				"content": "The module in fig. 3 is a module of the same type as the bottom half of fig. 1. It mostly served to test out which color was the most effective for the space."
			},
			{
				"tag": "h3",
				"content": "The second pass"
			},
			{
				"tag": "figure",
				"class": "figure-4",
				"src": "data/case-studies/outer-banks/figure-4.webp",
				"figcaption": "Figure 1.4"
			},
			{
				"tag": "p",
				"content": "From a spacing standpoint, it’s an improvement from the first pass. User feedback about the legibility (or lack thereof) of the heading font led me to try another one."
			},
			{
				"tag": "figure",
				"class": "figure-5",
				"src": "data/case-studies/outer-banks/figure-5.jpeg",
				"figcaption": "Figure 1.5"
			},
			{
				"tag": "p",
				"content": "I worked up the cards a good bit for this pass. I added box-shadow to the edges of each card and used an orange-black color scheme for the headings and text to reflect how this info appeared on one of the researched sites."
			},
			{
				"tag": "p",
				"content": "I removed the padding from the <code>&lt;img&gt;</code> elements to allow them to fill the card. <code>align-items: flex-start</code> had been applied to the <text-content> element inside the card; I removed this to allow the button to expand out across the card (fig. 5). I reorganized the code to keep the default stylings for each “type” of module in their respective stylesheets — NOT the general “site.css” file."
			},
			{
				"tag": "h3",
				"content": "Final iteration"
			},
			{
				"tag": "p",
				"content": "I had a few tasks I wanted to check off for the home stretch. First — double- and triple-check and make sure the site looks good on a small screen. (Could the spacing between the top navbar and the button below it in the first section look a little more harmonious even now?)"
			},
			{
				"tag": "figure",
				"class": "figure-6",
				"src": "data/case-studies/outer-banks/figure-6.webp"
			},
			{
				"tag": "p",
				"content": "I realized after looking at the sites I had researched that virtually all of them included a backdrop of a beachscape as the primary “attention-getter” on their landing pages. So — I made the change and put it into my layout."
			},
			{
				"tag": "figure",
				"class": "figure-7",
				"src": "data/case-studies/outer-banks/figure-7.jpeg"
			},
			{
				"tag": "p",
				"content": "I created a custom logo for this final pass and incorporated it into the header and footer. I did what I could to address all of the clear spacing issues in this round; adding the <code>vw</code> and <code>vh</code> element to some elements got me the consistency in spacing across screen sizes that I was looking for."
			},
			{
				"tag": "p",
				"content": "I found a nice technique to work with a background image's opacity without affecting the overlaying text — critical for the success of the dark version..."
			},
			{
				"tag": "p",
				"content": "In this technique, the gradient \"transitions\" between two separate translucent \"filters\". Unlike the normal opacity property, it doesn’t effect the child elements."
			},
			{
				"tag": "figure",
				"class": "figure-8",
				"src": "data/case-studies/outer-banks/figure-8.jpeg"
			},
			{
				"tag": "h3",
				"content": "Conclusion"
			},
			{
				"tag": "p",
				"content": "I learned a great deal about code organization from this project. Placing typographical elements in the correct places is of paramount importance when websites grow to have dozens of modules and hundreds, if not thousands, of components across multiple pages. Certain practices such as putting “one-off” changes in a broadly defined “site.css” file were helpful in keeping the default module stylings “clean” and ready to be used again for another purpose if needed."
			},
			{
				"tag": "p",
				"content": "Later, I received feedback about visualizing and working with a grid layout from the start, among other things, and I'm looking forward to implementing these suggestions in my next project."
			},
			{
				"tag": "p",
				"content": "For the next iteration of this project I want to think more deeply about user experience from the very outset. I will treat feedback as the most valuable form of information I can get about my work after its completion."
			},
			{
				"tag": "p",
				"content": "Key concepts for a successful user experience:"
			},
			{
				"tag": "ul",
				"content": [
					{
						"tag": "li",
						"content": "<em>Legibility.</em> If they can’t read it, they can’t use it."
					},
					{
						"tag": "li",
						"content": "<em>Where are you leading the eye? / The emotional response comes from more than the text.</em> How is everything on the page working together to lead the user to have the kind of experience you want them to have (or lead them to the type of information they’re looking for — or deliver the kind of feedback YOU’RE looking for)?"
					}
				]
			},
			{
				"tag": "p",
				"content": "My classmates created some really impressive work for this past project. It was inspiring to see, and it’s spurred me on to dig much deeper into the entire front-end toolkit."
			},
			{
				"tag": "p",
				"content": "Improvement comes through PRACTICE. I’m looking forward to doing much, much more of it."
			}
		]
	},
	{
		"slug": "figma-to-code",
		"siteXtensionType": "php",
		"title": "figma-to-code",
		"subtitle": "Working with designers, removing the built-in friction that can result in an environment with code as a component, and reproducing the designs faithfully.",
		"htmlContent": [
			{
				"tag": "h4",
				"content": "What is Figma?"
			},
			{
				"tag": "p",
				"content": "Figma is an application used by designers and developers to create interactive webpage mockups.  It easily simulates the path a user may take through an application by providing a “prototype” option to make connections between the desired pages.  The designer/developer can then run the demo and make changes as needed to the UX based on user feedback."
			},
			{
				"tag": "h4",
				"content": "Design"
			},
			{
				"tag": "p",
				"content": "We were provided three unique templates composed with variations of UI objects, which were in turn composed with smaller visual components — a header background, a button with text, an icon, etc."
			},
			{
				"tag": "figure",
				"class": "figure-1",
				"src": "data/case-studies/figma-to-code/figure-1.png",
				"figcaption": "The fully composed templates."
			},
			{
				"tag": "figure",
				"class": "figure-2",
				"src": "data/case-studies/figma-to-code/figure-2.png",
				"figcaption": "Each UI kit organizes the available components in a unique way, allowing for various iterations of a website, depending on what the client gravitates toward."
			},
			{
				"tag": "p",
				"content": "Taking this angle gave a clue on how to organize the files.  All of the modules that shared the same structural components were grouped under a similar folder name under “modules”:  “call-to-action”, “center-content”, etc.   The components themselves - which could appear in any module regardless of type -  were stored in the “components” folder."
			},
			{
				"tag": "p",
				"content": "Having organized the files, modules, and components, the next step was to begin to think about how to make a totally exact rendition of the final designs.  My initial thoughts went something like this:"
			},
			{
				"tag": "p",
				"content": "<em>\"The width of the templates is 1440px — the browser width of a 13-inch laptop.  It looks like the pixel values have been provided.  I’ll input those as the pixel values in the CSS.\" (In hindsight, it’s clear now that what these values are expressing is the maximum width/height allowed.  The margins and padding should respond to the screen size;in the second round this was one of the first things I cleared up.  See figure 3 for an example of how the standard site padding looked on a small screen…)</em>"
			},
			{
				"tag": "figure",
				"class": "figure-3",
				"src": "data/case-studies/figma-to-code/figure-3.png",
				"figcaption": "Too much padding on the sides for such a small screen!"
			},
			{
				"tag": "h4",
				"content": "Architect"
			},
			{
				"tag": "p",
				"content": "All of the text in the templates could in theory be converted to JSON data, as much of it is placeholder text that's repeated across all templates, but hard-coding the text inside each module (as each module was repeatable anyway) was the solution I went for."
			},
			{
				"tag": "h5",
				"content": "All of the templates for this project are modules; combinations of these modules are used to create each of the three final webpage mockups."
			},
			{
				"tag": "p",
				"content": "Each of the modules corresponds to one of the “primary” structures, or boxes, used for content groups.  A “module” can be thought of as a collection of media – text, movies, graphics, animations – that share a common thread of meaning or functionality.  (The word “component” could also possibly be used here, but in this project I reserved that word for the smaller pieces of code and functionality that are contained within each module.) The “hero” component, for example, is the “banner” of the site – it gives the title in the largest heading and a smaller, optional component for email input or principal links – and no matter what page the hero module is used in, it would, at the very minimum, play the same role on each page."
			},
			{
				"tag": "h5",
				"content": "How are the modules unique – how can one switch out / customize components?"
			},
			{
				"tag": "p",
				"content": "The template for each module has baseline characteristics any “child” or “variation” module will have.  Design decision:  separate templates or having them all draw off the same template? In this case it makes more sense to keep the templates separate – if the design team, or two people, land on the same idea and want to save it, it’ll require less digging to put the module together if it’s already been hard-coded out."
			},
			{
				"tag": "figure",
				"class": "three-features",
				"src": "data/case-studies/figma-to-code/three-features.png",
				"figcaption": "Three interpretations of the same module.  What options need to be available to the visitor?"
			},
			{
				"tag": "p",
				"content": "The “Feature” modules look very different from each other, but the content gives the necessary clue to their connection -- all of them contain the option for eyebrow headers, an <code>&lt;h2&gt;</code> element, and six \"feature items\" denoted either with numbers or icons."
			},
			{
				"tag": "p",
				"content": "All of the components used inside the modules are available in the UI kits created by the designers.  The basic process to build out each went something like this – create a file that stores that particular “variation” of the module.  Each variation of the module will read off the same stylesheet."
			},
			{
				"tag": "ul",
				"content": [
					{
						"tag": "li",
						"content": "Stacked boxes - block, flex, or grid – and read off values provided by Figma for padding, etc.  Inserted inner-column into each section - INSIDE it – to keep it from overexpanding at large screen sizes."
					},
					{
						"tag": "li",
						"content": "This was essentially the process for each module.  I brought in components that were unique to each module variation with PHP partials.  Styling for all of the elements in each module was taken care of in the collective stylesheet, and any components that would remain consistent across the site wouldn’t need any new classes put on them."
					},
					{
						"tag": "li",
						"content": "Key was to keep margin-top on each module, remembering that each additional module will add this extra space when it’s added."
					}
				]
			},
			{
				"tag": "h4",
				"content": "Implement"
			},
			{
				"tag": "p",
				"content": "This is an exercise in paying attention! The small details are essential.  Some examples: the border-radius on the feature grid-boxes; the font colors for every text element. <code>display: flex</code> was used to keep pictures and list-content beside each other at large screens (and stacked vertically for small screens)."
			},
			{
				"tag": "h4",
				"content": "Challenges"
			},
			{
				"tag": "h5",
				"content": "Designing for mobile"
			},
			{
				"tag": "p",
				"content": "We didn't get any small-screen mockups at the outset! Where does the design process fit in here?  In a real-world situation, we would get a designer involved as soon as possible to give some direction and temper some possible misdirected ideas. A review of basic responsive layout tenets would probably be in order. What’s the smallest possible screen size that a user can have?  (I treat 360px as the smallest value these days.) When I revisited this project, at the smallest screen sizes, I took a block approach to each module and went with simply stacking most content boxes on top of each other.  The variation that each module showcases and the games that each of them plays with the content show up at larger screen sizes."
			},
			{
				"tag": "h5",
				"content": "The email-submit module"
			},
			{
				"tag": "p",
				"content": "The envelope icon -- used as background on the form's input element -- was a challenge to rope in. Three CSS properties allowed for the correct positioning of the icon:"
			},
			{
				"tag": "ul",
				"content": [
					{
						"tag": "li",
						"content": "<code>background</code>"
					},
					{
						"tag": "li",
						"content": "<code>background-position</code> to move the icon away from the edge of the <code>&lt;input&gt;</code>. (This value is \"passively affected\" by the <code>padding</code> value of the text. -- and the <code>padding</code> value itself, to move the text past the envelope."
					}
				]
			},
			{
				"tag": "h5",
				"content": "The stubborn SVG"
			},
			{
				"tag": "p",
				"content": "A persistent issue throughout this project was replicating this background:"
			},
			{
				"tag": "p",
				"content": "A persistent issue throughout this project was replicating this background:"
			},
			{
				"tag": "figure",
				"class": "figure-4",
				"src": "data/case-studies/figma-to-code/figure-4.png"
			},
			{
				"tag": "p",
				"content": "My initial thought was to set the background-position to center and the background-size to cover.  In this situation, if the SVG begins to break out of its container (to preserve its aspect ratio), it will begin to clip.  It’s necessary to set the background-position to bottom here so any clipping will take place at the top of the image, where the effect is negligible."
			},
			{
				"tag": "h5",
				"content": "Some final pieces"
			},
			{
				"tag": "p",
				"content": "For the final editing pass, finessing the size of all objects was the focus.  This played the biggest part in the working-out of the details on the small-screen sizes.  Long-term lessons for the future are to bake in default <code>margin-top</code> values for all modules (they being the main “classes” of components that make up the web page."
			},
			{
				"tag": "p",
				"content": "Overall, what was the biggest progress-blocker during the final revisions?  The way the components were used within the modules for the first pass of the project.  The most glaring example was an <code>&lt;input&gt;</code> component that was used for completely different form variations (part of the “email-submit” module referenced above) – it should have been unique to each element.  Unlooked-for changes in size showed up while editing because of this."
			},
			{
				"tag": "p",
				"content": "The project easily proved its value and is continuing to do so – it’s evolving into a larger HTML boilerplate project that I plan to treat as a “blank canvas” for future client projects.  The project stressed the following concepts strongly:"
			},
			{
				"tag": "ul",
				"content": [
					{
						"tag": "li",
						"content": "communicating ideas in a way that is understandable by everyone on a team;"
					},
					{
						"tag": "li",
						"content": "reusing module components whenever and wherever possible (this will create a sense of unity of intention across all designs);"
					},
					{
						"tag": "li",
						"content": "understanding how to delegate tasks, both for one’s own work and for each team member’s work;"
					},
					{
						"tag": "li",
						"content": "the perhaps counterintuitive realization that designing the webpage – visually and how it will work – should- take longer than actually writing the code out.  Nothing will slow a developer down more than trying to think through a complex design problem while actually writing out the code.  Better to go through a few iterations on a whiteboard first – then tackle it in the code editor."
					}
				]
			}
		]
	}
]